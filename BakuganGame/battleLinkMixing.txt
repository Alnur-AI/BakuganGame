using System;
using System.Collections.Generic;
using System.Linq;

class Program
{
    static void Main(string[] args)
    {
        // Initialize the array of objects with n elements and 2 teams
        int n = 10;
        int teams = 3;
        var objects = new List<Object>();
        for (int i = 0; i < n; i++)
        {
            objects.Add(new Object(i+1, i % teams));
        }

        // Separate the array into team parts
        var teamArrays = new List<int>[teams];
        for (int i = 0; i < teams; i++)
        {
            teamArrays[i] = objects.Where(o => o.team == i).Select(o => o.id).ToList();
        }

        // Shuffle each team array independently
        var rand = new Random();
        for (int i = 0; i < teams; i++)
        {
            int count = teamArrays[i].Count;
            for (int j = count-1; j > 0; j--)
            {
                int k = rand.Next(j+1);
                int temp = teamArrays[i][j];
                teamArrays[i][j] = teamArrays[i][k];
                teamArrays[i][k] = temp;
            }
        }

        // Combine the shuffled team arrays in alternating order
        var mixedQueue = new Queue<int>();
        int currentTeam = 0;
        while (teamArrays[currentTeam].Count > 0)
        {
            int id = teamArrays[currentTeam][0];
            mixedQueue.Enqueue(id);
            teamArrays[currentTeam].RemoveAt(0);
            currentTeam = (currentTeam + 1) % teams;
        }

        // Print the resulting queue with mixed IDs and alternating teams
        Console.WriteLine("Mixed ID Queue:");
        foreach (int id in mixedQueue)
        {
            int team = objects[id-1].team;
            Console.WriteLine("ID: {0}, Team: {1}", id, team);
        }
    }
}

class Object
{
    public int id;
    public int team;

    public Object(int id, int team)
    {
        this.id = id;
        this.team = team;
    }
}